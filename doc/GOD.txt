*GOD.vim* Get Online Doc: easily get links to vim online doc
>
   ____    ___    ____       __     __  ___   __  __ 
  / ___|  / _ \  |  _ \      \ \   / / |_ _| |  \/  |
 | |  _  | | | | | | | |      \ \ / /   | |  | |\/| |
 | |_| | | |_| | | |_| |  _    \ V /    | |  | |  | |
  \____|  \___/  |____/  (_)    \_/    |___| |_|  |_|
<

GOD.vim                                                           *GOD.txt*

1. Introduction                                                 |GOD-intro|
2. Usage                                                        |GOD-usage|
3. GOD configuration                                    |GOD-configuration|
4. About                                                        |GOD-about|

==============================================================================
1. Introduction                                                 *GOD-intro*

GOD.vim stands for Get Online Doc.

This plugin allows you to easily get a link to online doc to post of sites
like vi.stackexchange.com or reddit.com

This plugin takes a Vim help tag, generate a markdown formatted link to the
corresponding page on https://vimhelp.appspot.com and puts this link in your
clipboard.

==============================================================================
2. GOD Usage                                       *GOD-usage* *:GOD* *GOD*
:GOD {tag}
            Generates a link to the online page corresponding to the page
            `:help {tag}`. You'll get in your clipboard register a link of the
            following form:
 >
       [`:h {tag}`](http://vimhelp.appspot.com/{helpfile}.html#{helptag}
<

:GOD {tag1} {tag2} ...
            Generates a list of links in the markdown format. you'll get in
            your clipboard refister a list of the following form:
 >
       - [`:h {tag1}`](http://vimhelp.appspot.com/{helpfile1}.html#{helptag1}
       - [`:h {tag2}`](http://vimhelp.appspot.com/{helpfile2}.html#{helptag2}
       ...
<

                                                             *GOD_copy_doc*

GOD exposes a mapping to yank text from the doc and format the text to markdown.
This mapping is only available in the help pages with `<Leader>dy`.

To use it you need to visually select the text you want to format, use the
mapping and the formatted text will be put in your system clipboard.

If you want to disable this mapping you can set |g:god_disable_copy_doc_mapping|
to 1 in your vimrc.

You can also redefine the mapping with the following line:

>
    vmap <your new key> <Plug>GODCopyDoc
<

Note that you should put this line in a custom |ftplugin| or in a |:autocmd|

==============================================================================
3. GOD configuration                                    *GOD-configuration*

                                                         *g:loaded_god_vim*

To disable the plugin you can put the following line in your `vimrc`:

>
    let g:loaded_god_vim = 1
<

                                                  *g:god_close_help_buffer*

When you use the `:GOD` command, the corresponding help buffer will be open.
If you don't want to see it, you can add the following line to your `vimrc`:

>
    let g:god_close_help_buffer = 1
<

                                           *g:god_disable_copy_doc_mapping*

By default GOD creates a mapping on to format the text visually selected from
the help pages to markdown. The default mapping is `<leader>dy` but you can
disable is with

>
    let g:god_disable_copy_doc_mapping = 1
<

==============================================================================
4. About GOD                                                    *GOD-about*

This plugin was inspired by this question on the site vi.stackexchange.com:
    http://vi.stackexchange.com/q/4346/1841

The sources of the plugin are available on github:
    http://github.com/statox/GOD.vim

The plugin is distributed under the MIT license. See the LICENSE file which
comes with the plugin, or here:
    https://opensource.org/licenses/MIT

Thanks to [Carpetsmoker](https://arp242.net/) for his help with url encoding.
And to [Luc Hermitte](https://github.com/LucHermitte) for his help on several
improvements.

vim:tw=75:ts=8:ft=help:norl:
